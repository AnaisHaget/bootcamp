{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8d81d9a0-c86c-4e51-bfb6-6d6424f982d5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello, world.\n"
     ]
    }
   ],
   "source": [
    "print('Hello, world.')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30a3eae7-ddf2-4d18-8dce-814506008705",
   "metadata": {},
   "source": [
    "Always look on the bright side of life.\n",
    "\n",
    "$$E = mc^2.$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "bfe1cfa2-3b23-4f9e-b2de-8f819288dfe3",
   "metadata": {},
   "outputs": [],
   "source": [
    "a = 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "872bcf6c-d9f0-476a-86c6-d2c37679f606",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a + 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9ea797ee-ca85-48db-9197-e8378968d28b",
   "metadata": {},
   "outputs": [],
   "source": [
    "a = 5 + 6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "885f2359-3215-43a3-92b5-dd94b5a7f42b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Variable   Type    Data/Info\n",
      "----------------------------\n",
      "a          int     11\n"
     ]
    }
   ],
   "source": [
    "%whos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "8c121882-37a1-4e8d-98a0-2bce972695b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/bois/Dropbox/git/programming_bootcamp/2022/content/lessons'"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pwd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f8345788-114a-445a-b43a-a2e58cfd655c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "int"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f077ccf9-7ca5-4b91-b321-cfe0572704f4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "float"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(2.3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "550ef8fb-0111-447f-84e7-cab9cda47286",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "str"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type('Hello, world.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "71bf3f9a-30ad-418a-bf2d-e647d1474311",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "float"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(6.022e23)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "baa54366-6a26-4b27-b5f2-10b947f3743e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "float"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(1.38e-23)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0462d581-1131-41cb-9b44-972a6dabb671",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'hello'"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'hello'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d5ffd265-4c21-401e-b92e-6a40eea3fa1c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'hello'"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"hello\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "b3ffe257-4164-45c7-b7ae-9ac90d34e172",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'hello'"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"\"\"hello\"\"\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ea9fcf19-0b09-4161-baeb-319060770fce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'hello'"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''hello'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0cbd1693-0a0a-4eff-9bd3-b1ea189ec508",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "With the lights out,\n",
      "it's less dangerous.\n"
     ]
    }
   ],
   "source": [
    "my_str = \"\"\"With the lights out,\n",
    "it's less dangerous.\"\"\"\n",
    "\n",
    "print(my_str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "291606fe-39ad-4cf5-b278-2d2b100f2c9a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "11"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "5 + 6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "3b4bbf76-2036-48e6-a645-44070cdaf21d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-1"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "5 - 6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a3d4b985-9fe1-4c4d-a3f5-465f1063f9a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "6 - 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "73056b24-7ab1-48e5-8f70-b43a3a2f3546",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "2 * 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "0e754e03-b63e-4bca-a2e6-9012068c0039",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6666666666666666"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "2 / 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "cdecc4ab-d964-4f73-9090-282777e10f35",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.0"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "4 / 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "bad6a5d9-20d4-4fe2-8338-0332ccc857e3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "2 % 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "5673b60d-7178-486d-a46b-b951ad205700",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "4 % 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "27e2b88d-1aa8-4b01-86a8-ef556eb13957",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-8.881784197001252e-16"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "5.3 - (2.1 + 3.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "66e60310-b8a2-47fc-b617-4922eb6418bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "2 // 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "283997f4-2840-457a-8ced-9b7c49eddb51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.0"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "2.0 // 3.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "4be2278a-bd1c-4218-baef-ba80b0b1f7e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6666666666666666"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "2.0 / 3.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "fe09ae6a-c186-446b-a1cc-951f0d64cd48",
   "metadata": {},
   "outputs": [
    {
     "ename": "ZeroDivisionError",
     "evalue": "float division by zero",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mZeroDivisionError\u001b[0m                         Traceback (most recent call last)",
      "Input \u001b[0;32mIn [29]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[38;5;241;43m2.0\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m/\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m0.0\u001b[39;49m\n",
      "\u001b[0;31mZeroDivisionError\u001b[0m: float division by zero"
     ]
    }
   ],
   "source": [
    "2.0 / 0.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "48f9693f-9222-46ef-bb36-b9139c02dd45",
   "metadata": {},
   "outputs": [],
   "source": [
    "2 / 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "41a3beea-e4fb-40d7-b7c8-ffba7199347c",
   "metadata": {},
   "outputs": [],
   "source": [
    "3 * 4.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7ed10cfc-32df-43a7-a8ab-e86ccfd9376c",
   "metadata": {},
   "outputs": [],
   "source": [
    "'hello, ' + 'world'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "f04f6781-8efd-459c-ad5d-3bf6abdf6414",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'42'"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'4' + '2'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "fb46e682-2df3-4f60-9375-aeab211493ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'424242'"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'42' * 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "9373a70f-c925-45a0-83c5-f7aef47577b3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "441"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1**3 + 2**3 + 3**3 + 4**3 + 5**3 + 6**3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "00b36586-623f-40be-82b6-42804df39198",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "441"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(1 + 2 + 3 + 4 + 5 + 6)**2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "0ca75400-04e8-4105-8d77-b5fc84531a9c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = 2\n",
    "b = 3\n",
    "\n",
    "a + b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "9ae6c01e-5c06-4f83-85af-7ac326e9e21d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "530e1d16-4834-41a9-acf9-90593b8bff3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a += 4\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "aee99b26-63fa-42f6-aa5c-cb2a76f3897d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "36"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a **= 2\n",
    "\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "3fbca672-17e6-407b-9941-4daf09aeba05",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_str = '42'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "11a90b78-9850-431f-bfd0-7902f3d1ae34",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'42'"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_str"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "483460bd-f7b3-4492-898f-d6e9904dff39",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "42"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "int(my_str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "02eeb003-bf5b-4cdd-b62c-4b02e4dfe9d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "5 == 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "2af09b9f-58b0-45b3-bd7b-5babfe867fb9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "5 == 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "6ed9fdd0-290f-421d-88a9-a01bd604c36e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "36"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "31445f35-c635-47bb-866f-39865b26b643",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a == 36"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "7645da38-0869-4974-9cee-66e70f722ee6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "bool"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "dcc6a5e1-2a06-4daf-b76b-b694b5876c46",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "2.3 + 3.0 == 5.3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "5840d76e-7597-496f-a4a3-e0da439e2c51",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "3 < 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "dbb2aa42-e442-4fb8-8842-ff7679821c6f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'michael jordan' > 'lebron james'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "1190baa6-69d5-442c-9a49-4331adf8a21b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "109"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ord('m')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "82e969cc-571b-4430-a0f0-d0a311ba1716",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "108"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ord('l')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "43745541-64ac-4f5d-adce-9b252823ceb4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'lebron' < 'lebron james'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "e7b02169-858d-462f-be7b-4b35990c04bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = 5.6\n",
    "b = 5.6\n",
    "\n",
    "a is b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "45addc5a-e6c9-4ee8-9e9f-97206be875f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = 5.6\n",
    "b = a\n",
    "a = 6.1\n",
    "\n",
    "a is b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "f944ceb8-3031-4f85-ab3a-45c3b996e04b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6.1, 5.6)"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a, b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "6ee0c383-1ba3-4bcf-a20d-8c91d914fe3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = 5\n",
    "b = 5\n",
    "\n",
    "a == b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "dc9c240b-da95-43b1-9b90-b1ebfc114b4b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a is b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "f6f0c73b-de35-4d59-b0ed-4a2f2d51ce38",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = 350\n",
    "b = 350\n",
    "a is b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "94147818-cee5-47ec-8c1e-c78a022c6e0a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = 'hello, world.'\n",
    "b = 'hello, world.'\n",
    "\n",
    "a is b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "7aa5f4f6-d80d-4330-815b-11d9f0628ced",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = 'python'\n",
    "b = 'python'\n",
    "\n",
    "a is not b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "50d7c5a8-047b-49b6-b61e-21cb0117bd99",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'michael jordan' != 'lebron james'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "edc1cf9f-593f-4917-8a8b-13d8b6a7369d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "not (False or True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "5e170c16-b7b9-417f-845a-7228bc55b182",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "True + False"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a12d8d7-63c5-4255-b142-1afcad2a1414",
   "metadata": {},
   "source": [
    "if something is true:\n",
    "    do task a\n",
    "otherwise:\n",
    "    do task b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "cd5660ee-c763-4078-9278-8a32fd94e92d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "This is a stop codon.\n"
     ]
    }
   ],
   "source": [
    "codon = 'UAG'\n",
    "\n",
    "# Make a list of stop codons\n",
    "stop_codons = ('UAG', 'UAA', 'UGA')\n",
    "\n",
    "if codon == 'AUG':\n",
    "    print('This is the start codon.')\n",
    "elif codon in stop_codons:\n",
    "    print('This is a stop codon.')\n",
    "else:\n",
    "    print('This is neither a stop nor the start codon.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "f913fc22-3724-4442-9d60-74173c195c88",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list_1 = [1, 2, 3, 4]\n",
    "my_list_2 = [1, 2.4, 'a string', ['a string in another list', 5]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "6b9b1818-2dca-4a40-b2dc-671cfdc29c38",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['A', ' ', 's', 't', 'r', 'i', 'n', 'g']"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_str = 'A string'\n",
    "list(my_str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "40aa88a8-5d38-45bb-bb2b-a45cac8fb0b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 4, 5, 6]"
      ]
     },
     "execution_count": 66,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[1, 2, 3] + [4, 5, 6]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "1201476f-0301-4753-aa5c-d2344bee66de",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 1, 2, 3, 1, 2, 3]"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[1, 2, 3] * 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "ab3719be-30aa-4bdd-bee9-b392d9585f22",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list_1 = [1, 2, 3, 4]\n",
    "my_list_2 = [1, 2.4, 'a string', ['a string in another list', 5]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "7d8db2bc-c82c-41b4-84f8-9b4731ac1273",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "5 not in my_list_2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "182a2c26-2a81-4543-8364-7410cb2db8d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list = my_list_2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "4f59effd-4489-40f0-9a26-8e785d98863f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2.4, 'a string', ['a string in another list', 5]]"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "f1f2bc3f-2f54-4c66-bba0-dea7f3432b14",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.4"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "ba68926e-d66d-44be-bda9-586d08ad518b",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "d0dfb940-6139-458b-bd72-531bb1662a33",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list[4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "fb24c023-546b-4ff7-8745-57a59c96844a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list[-11]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "8ec76837-9568-4d7a-908f-0b6f4e6705ba",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4]"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list[0:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "5c91c4a1-a21b-4121-b3e6-47625d09b2e3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 3, 6, 9]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list[0::3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "ed176fdb-bdbb-48c1-b351-5958e45765b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 4, 6, 8]"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list[2:-1:2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "4d555569-2b96-46c1-bde9-f93f5be24016",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 4, 6, 8]"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "evens = my_list[::2]\n",
    "evens_without_end_values = evens[1:-1]\n",
    "evens_without_end_values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "a542dfe2-eeb3-47d3-aa08-6d332eda5d11",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "132eed39-1c55-4b6a-9ec6-da018a0be44a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "140648914075584"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "id(my_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "4b17d59c-0918-447b-a366-fe475753676b",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list[5] = 'five'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "8c459308-cd37-41b4-8a7a-9e09f8e67da9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4, 'five', 6, 7, 8, 9, 10]"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "148bc527-159c-41ef-bd16-1035dd9ae119",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "140648914075584"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "id(my_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "c323081d-a5fd-4025-a283-b3d10641d62e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "140648914363024"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = 689\n",
    "id(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "35461668-c170-4130-ad8b-be1fe2c036ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "140648914363856"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = 690\n",
    "id(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "518038bd-d3f8-419f-ae06-184821a2d1d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4, 'five', 6, 7, 8, 9, 10]"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "3ea3f96f-b970-493e-84b4-5f31ab7d934a",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_other_list = my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "d572013f-3fcf-411c-9793-e3d10e6e8d9e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4, 'five', 6, 7, 8, 9, 10]"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_other_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "1a69c558-f134-4633-85b6-7d65e171b6ad",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_other_list[10] = 'ten'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "b2d08cf9-810d-46ac-8fe0-f4d44f197334",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4, 'five', 6, 7, 8, 9, 'ten']"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_other_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "ec39e8da-958f-4421-818b-dd7b2457e591",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4, 'five', 6, 7, 8, 9, 'ten']"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "735b8010-73c2-4344-8e69-41afc93ee9a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_tuple = (1, 2, 3, 4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "1bee41bd-faed-4903-babd-39d7908d6106",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 2, 3, 4)"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_tuple"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "a62618a2-55d9-4920-9711-90cc2d65acdb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "tuple"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(my_tuple)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "ad8e5d9a-cb92-4f71-a4c1-b9d91e403955",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'tuple' object does not support item assignment",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Input \u001b[0;32mIn [96]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m my_tuple[\u001b[38;5;241m2\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mthree\u001b[39m\u001b[38;5;124m'\u001b[39m\n",
      "\u001b[0;31mTypeError\u001b[0m: 'tuple' object does not support item assignment"
     ]
    }
   ],
   "source": [
    "my_tuple[2] = 'three'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "059904c0-528d-4d52-a2e3-d316bf204830",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0, 1, 2, 3, 4, 'five', 6, 7, 8, 9, 'ten')"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tuple(my_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "d72ae30b-059a-4452-afae-9b8f98dc7fd5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_tuple = (1, 2, 3)\n",
    "\n",
    "a, b, c = my_tuple\n",
    "\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "3f735e9a-bfc4-4a17-944c-c0e37d0847a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "308ce565-d48c-4cca-8048-e4379847b329",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6666666666666666"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seq = 'GCACGAGGAGGAGCGACGAGCAACAGACACACGACGACGAGCGAGCGGACGACG'\n",
    "\n",
    "# Initialize my GC counter\n",
    "n_gc = 0\n",
    "\n",
    "\n",
    "for base in seq:\n",
    "    if base in 'GCgc':\n",
    "        n_gc += 1\n",
    "        \n",
    "n_gc / len(seq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "1722030f-601a-4ec8-816c-6c9da5bc47e1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "54"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(seq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "6feea79a-9e27-47a0-8975-c437f43fd5da",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_integers = [1, 2, 3, 4, 5]\n",
    "\n",
    "for i, _ in enumerate(my_integers):\n",
    "    my_integers[i] *= 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "b928b910-7bf0-4be1-9d99-3a4d770a5d7c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 4, 6, 8, 10]"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_integers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "a37a9d39-cb5d-4f20-95dd-d0cd3c65aeb4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 4, 6, 8, 10]"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_integers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "9df0e4e9-bc04-4e97-a9b4-24321be68dad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list(range(10))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "377c8d49-7a78-4b34-b2c0-f08f24a8ea4d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "19 Dunn D\n",
      "8 Ertz MF\n",
      "16 Lavelle MF\n",
      "15 Rapinoe F\n"
     ]
    }
   ],
   "source": [
    "names = ('Dunn', 'Ertz', 'Lavelle', 'Rapinoe')\n",
    "positions = ('D', 'MF', 'MF', 'F')\n",
    "numbers = (19, 8, 16, 15)\n",
    "\n",
    "for num, pos, name in zip(numbers, positions, names):\n",
    "    print(num, name, pos)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "6a84ade1-d3e8-452d-87c0-6449fb8323a8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Rapinoe\n",
      "Lavelle\n",
      "Ertz\n",
      "Dunn\n"
     ]
    }
   ],
   "source": [
    "for name in reversed(names):\n",
    "    print(name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "190d1d4c-2fcf-41ad-ac5b-ae22bc7e50d5",
   "metadata": {},
   "outputs": [],
   "source": [
    "seq = 'AGAGCUACGACACUACGAUAGACGAGAGGGAGCGAUUUUACGAGCUAA'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "d9c1dfbb-19ff-4dbe-a84c-8c466b6ce563",
   "metadata": {},
   "outputs": [],
   "source": [
    "start_codon = 'AUG'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "38ba310c-17b9-455c-8125-a2e52fa0ed40",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Codon not found\n"
     ]
    }
   ],
   "source": [
    "# initialize the sequence index\n",
    "i = 0\n",
    "\n",
    "# Scan the sequence until I hit the start codon\n",
    "while seq[i:i+3] != start_codon and i < len(seq):\n",
    "    i += 1\n",
    "    \n",
    "if i == len(seq):\n",
    "    print('Codon not found')\n",
    "else:\n",
    "    print('The start codon starts at index', i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "baa4fdb8-940d-4a45-a062-4c76bd6cb804",
   "metadata": {},
   "outputs": [],
   "source": [
    "def ratio(x, y):\n",
    "    \"\"\"The ratio of `x` to `y`.\"\"\"\n",
    "    return x / y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "dfc229f3-7e4b-47af-b6bc-38836ca81932",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.0"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratio(4, 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "6c5807d9-5889-4a12-b906-68d76fbd4944",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on function ratio in module __main__:\n",
      "\n",
      "ratio(x, y)\n",
      "    The ratio of `x` to `y`.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(ratio)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "abae8f36-8e73-4b58-904c-72fa7bd8b15b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\u001b[0;31mSignature:\u001b[0m \u001b[0mratio\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
       "\u001b[0;31mDocstring:\u001b[0m The ratio of `x` to `y`.\n",
       "\u001b[0;31mFile:\u001b[0m      /var/folders/tj/4wnqnhc13cl70g85k6w4kbh80000gn/T/ipykernel_2529/1007532851.py\n",
       "\u001b[0;31mType:\u001b[0m      function\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ratio?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "17d35f3c-5682-4337-ad08-130ba92bd293",
   "metadata": {},
   "outputs": [],
   "source": [
    "def answer_to_the_ultimate_question_of_life_the_universe_and_everything():\n",
    "    return 42"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "75c395f6-0ccf-49cb-ade3-d8095937666e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "42"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "answer_to_the_ultimate_question_of_life_the_universe_and_everything()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "a365d1c9-0ca0-4656-8147-e227c1ab345c",
   "metadata": {},
   "outputs": [],
   "source": [
    "def the_most_trivial_function():\n",
    "    pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "922f803f-9839-4c1b-b4bb-9dfb1d17366d",
   "metadata": {},
   "outputs": [],
   "source": [
    "return_val = the_most_trivial_function()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "6d6b3f70-5126-4c9d-9036-cbf25147d179",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n"
     ]
    }
   ],
   "source": [
    "print(return_val)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "22909301-5885-4e77-9394-c516dc2d702f",
   "metadata": {},
   "outputs": [],
   "source": [
    "def complement_base(base, material='DNA'):\n",
    "    \"\"\"Returns the Watson-Crick complement of a base.\"\"\"\n",
    "    base = base.lower()\n",
    "    \n",
    "    if base == 'a':\n",
    "        if material == 'DNA':\n",
    "            return 'T'\n",
    "        elif material == 'RNA':\n",
    "            return 'U'\n",
    "    elif base in 'tu':\n",
    "        return 'A'\n",
    "    elif base == 'g':\n",
    "        return 'C'\n",
    "    else:\n",
    "        return'G'\n",
    "    \n",
    "    \n",
    "def reverse_complement(seq, material='DNA'):\n",
    "    \"\"\"Compute reverse complement of a sequence\"\"\"\n",
    "    # initialize reverse complement\n",
    "    rev_seq = ''\n",
    "    \n",
    "    for base in reversed(seq):\n",
    "        rev_seq += complement_base(base, material=material)\n",
    "        \n",
    "    return rev_seq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "f38e804e-2189-4d5f-a544-fc03e726ab3a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'GCUAGCCCCUGAUCUAUCU'"
      ]
     },
     "execution_count": 159,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reverse_complement('AGATAGATCAGGGGCTAGC', material='RNA')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "3cdba36b-3243-470b-8df7-82056ee771ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_three_numbers(a, b, c):\n",
    "    return a + b + c"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "8b445ef0-92bf-43c4-9296-b78a047930a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "40"
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "add_three_numbers(4, 7, 29)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "8a8250e0-0e58-4f7d-a688-8e3c11631027",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_numbers = (4, 7, 29)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "1983afeb-c397-49c5-8eed-33e218d8c9f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "40"
      ]
     },
     "execution_count": 144,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "add_three_numbers(*my_numbers)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "f030e689-49d7-4556-b67a-d19234e77cd5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'AGAGCUACGACACUACGAUAGACGAGAGGGAGCGAUUUUACGAGCUAA'"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "f8fc16b1-31e1-49a7-a9b2-d6d89cb16fbb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.4791666666666667"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(seq.count('G') + seq.count('C')) / len(seq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "ca55d781-574c-44a4-a689-3b4607f998ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'AAAAAAA'.count('AA')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "eaf34918-90bf-441e-89c6-a925dc85e411",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-1"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seq.find('AUG')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "8310069a-97dd-49ca-a83c-e9786b6c8c31",
   "metadata": {},
   "outputs": [],
   "source": [
    "seq = 'ACUACUAGAUCAAUGCGACGAGCAUCAGCUAAUGAGUAGAGA'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "207e4028-9000-4767-a94d-a07ff75bd5a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "seq = seq.replace('U', 'T')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "3cec3616-3110-4159-8393-ac6ca16159ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'ACTACTAGATCAATGCGACGAGCATCAGCTAATGAGTAGAGA'"
      ]
     },
     "execution_count": 167,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "48f865bf-d25d-4464-99b3-b7b4b4f7fbcb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'TheDudeabides.'"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "word_tuple = ('The', 'Dude', 'abides.')\n",
    "\n",
    "''.join(word_tuple)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "671f34b8-bce0-4c2e-957d-e3b4a9af59d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "adjective = 'sunny'\n",
    "plural_noun = 'computers'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "32f1e24c-40b0-44d7-bbba-b3f448b667de",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_str = \"\"\"\n",
    "Let's do a Mad Lib!\n",
    "During this bootcamp, I feel {adjective}.\n",
    "The instructors give us {plural_noun}.\n",
    "\"\"\".format(adjective=adjective, plural_noun=plural_noun)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "83a3e92a-292c-4af6-b621-9eedf2db9e6f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Let's do a Mad Lib!\n",
      "During this bootcamp, I feel sunny.\n",
      "The instructors give us computers.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(my_str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "677f5761-82bb-4da3-9bd7-5ef639ba36d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'There are 50 in the US.'"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "n_states = 50\n",
    "pi = 3.14\n",
    "thing = 'rug'\n",
    "\n",
    "f'There are {n_states} in the US.'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "id": "14a10644-bb31-403b-b5d0-cf72143f3f4d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'π is approximately 3.14'"
      ]
     },
     "execution_count": 179,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f'π is approximately {pi}'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "952f7325-26da-4a53-9a72-ceb22cc6d25d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'That rug really tied the room together.'"
      ]
     },
     "execution_count": 180,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f'That {thing} really tied the room together.'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "924129c0-0529-4cd5-9cac-e4151674058c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
